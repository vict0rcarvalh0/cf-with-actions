name: Pipeline CD - DeployBuddies

on:
  workflow_dispatch:

jobs:
  get-aws-credentials:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

  deploy:
    needs: get-aws-credentials
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3

    - name: Terraform Init
      run: terraform -chdir=terraform/deploybuddies/prod init

    - name: Terraform Apply
      id: apply
      run: terraform -chdir=terraform/deploybuddies/prod apply -auto-approve

    - name: Get Terraform Outputs
      id: outputs
      run: terraform -chdir=terraform/deploybuddies/prod output -json > outputs.json

    # - name: Display EC2 Instance IDs
    #   run: |
    #     cat outputs.json
    #     instance_ids=$(jq -r '.backend_instance_ids.value[]' outputs.json)
    #     echo "Instance IDs: $instance_ids"

    # - name: SSH into EC2 Instances
    #   run: |
    #     instance_ids=$(jq -r '.backend_instance_ids.value[]' outputs.json)
    #     for instance_id in $instance_ids; do
    #       public_ip=$(aws ec2 describe-instances --instance-ids $instance_id --query 'Reservations[0].Instances[0].PublicIpAddress' --output text)
    #       echo "Connecting to instance $instance_id with IP $public_ip"
    #       ssh -o StrictHostKeyChecking=no -i /path/to/your/private/key ec2-user@$public_ip 'echo "Hello from $(hostname)"'
    #     done
    #   env:
    #     AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
    #     AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
